// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "10/04/2022 18:36:00"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module digibotController (
	LDIR,
	A,
	B,
	C,
	RDIR);
output 	LDIR;
input 	A;
input 	B;
input 	C;
output 	RDIR;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \LDIR~output_o ;
wire \RDIR~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \inst|sub|79~combout ;
wire \C~input_o ;
wire \inst1|sub|79~combout ;


cyclonev_io_obuf \LDIR~output (
	.i(\inst|sub|79~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LDIR~output_o ),
	.obar());
// synopsys translate_off
defparam \LDIR~output .bus_hold = "false";
defparam \LDIR~output .open_drain_output = "false";
defparam \LDIR~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \RDIR~output (
	.i(\inst1|sub|79~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\RDIR~output_o ),
	.obar());
// synopsys translate_off
defparam \RDIR~output .bus_hold = "false";
defparam \RDIR~output .open_drain_output = "false";
defparam \RDIR~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|sub|79 (
// Equation(s):
// \inst|sub|79~combout  = (!\A~input_o  & \B~input_o )

	.dataa(!\A~input_o ),
	.datab(!\B~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|sub|79~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|sub|79 .extended_lut = "off";
defparam \inst|sub|79 .lut_mask = 64'h2222222222222222;
defparam \inst|sub|79 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst1|sub|79 (
// Equation(s):
// \inst1|sub|79~combout  = (!\A~input_o  & \C~input_o )

	.dataa(!\A~input_o ),
	.datab(!\C~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1|sub|79~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1|sub|79 .extended_lut = "off";
defparam \inst1|sub|79 .lut_mask = 64'h2222222222222222;
defparam \inst1|sub|79 .shared_arith = "off";
// synopsys translate_on

assign LDIR = \LDIR~output_o ;

assign RDIR = \RDIR~output_o ;

endmodule
